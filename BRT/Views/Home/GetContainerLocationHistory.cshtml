@using System.Data

@{
    ViewBag.Title = " - History";
    var _data = ViewBag.Data as DataTable;
}

<!-- SweetAlert CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

<!-- SweetAlert JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Include Select2 CSS -->
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />




<style>
    body {
        font-family: Arial, sans-serif;
    }

    


    .currentLocationButton {
        background-color: #ffcccc; /* Light red background */
        color: rgb(210,20,20); /* Red text */
        border: 2px solid #ff0000;
        color: green;
        padding: 10px;
        margin: 5px;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.3s, color 0.3s;
        font-size: 12px;
        transition: background-color 0.3s ease, color 0.3s ease, font-size 0.3s ease;
    }

        .currentLocationButton:hover {
            background-color: #ff6666; /* Darker red on hover */
            color: white;
            font-size: 20px;
        }

    .prevLocationButton {
        background-color: #f0f0f0;
        border: 2px solid #007bff;
        color: green;
        padding: 10px;
        margin: 15px;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.3s, color 0.3s;
        font-size: 12px;
        transition: background-color 0.3s ease, color 0.3s ease, font-size 0.3s ease;
    }

        .prevLocationButton:hover {
            background-color: green;
            color: white;
            font-size: 20px;
        }

    .container-header {
        text-align: left;
        padding: 20px;
        font-size: 24px;
        font-weight: bold;
        color: midnightblue;
    }

    .form-select {
        width: 100%;
        padding: 8px;
        border-radius: 4px;
        border: 1px solid #007bff;
    }

    .table-container {
        margin-top: 20px;
        margin-left: auto;
        margin-right: auto;
        width: 100%;
    }

    .table {

        border-collapse: collapse;
        text-align: left;
    }

        .table th, .table td {
            
            padding: 12px;
        }

        .table th {
            background-color: midnightblue;
            color: white;
            font-weight: bold;
            text-align: center;
        }

        .table td {
            text-align: center;
            
        }

    .form-label {
        font-weight: bold;
    }

 
    .dropdown-container {
        margin-top: 1px;
        text-align: left;
    }

    .hr-divider {
        border-top: 2px solid #007bff;
        margin-bottom: 20px;
    }

    .btn-primary{
        background-color:midnightblue;
    }
</style>

<h2 class="container-header">Container Location History </h2>
<hr class="hr-divider" />
<form method="get" asp-action="GetContainerLocation" asp-controller="Home">

    <div class="row">

      
        <div class="col-md-2">
            <div class="dropdown-container">

                <select id="containerNoDropdown" class="form-select" name="containerNo">
                    <option value="">--Select ContainerNo--</option>
                    <!-- Populate this with container numbers dynamically if needed -->
                </select>


            </div>
        </div>
        <div class="col-md-2">
           
            <input type="submit" value="Load Container History" class="btn btn-sm btn-primary btn-block mb-2 w-75 font-weight-bolder" />

        </div>


    </div>
</form>
<hr class="hr-divider" />

@* <div id="customButtonContainer"></div>
 *@
<div class="">
    <table class="table table-bordered" id="tblhistory">
        <thead>
            <tr>
                <th>Container Number</th>
                <th>Size</th>
                <th>Current Location</th>
                <th>Previous Locations</th>
                <th>Moved On</th>
                <th>Moved By</th>

            </tr>
        </thead>
        <tbody>
            @if (_data != null)
            {
                @foreach (DataRow item in _data.Rows)
                {
                    <tr>
                        <td> @item["ContainerNo"]  </td>
                        <td>@item["Size"]</td>

                        @if (string.IsNullOrEmpty(item["CurrentLocation"].ToString()) || item["CurrentLocation"] == DBNull.Value)
                        {
                            <td> - </td>
                        }
                        else
                        {
                            @if (!string.IsNullOrEmpty(@item["CurrentLocation"].ToString()) && @item["CurrentLocation"].ToString().Trim() != ",")
                            {
                                <td><span class="currentLocationButton">@item["CurrentLocation"]</span></td>
                            }
                            else
                            {
                                <td> - </td>
                            }

                        }

                        @if (string.IsNullOrEmpty(item["PreviousLocation"].ToString()) || item["PreviousLocation"] == DBNull.Value)
                        {
                            <td> - </td>
                        }
                        else
                        {
                            @if (!string.IsNullOrEmpty(@item["PreviousLocation"].ToString()) && @item["PreviousLocation"].ToString().Trim() != ",")
                            {
                                <td><span class="prevLocationButton">@item["PreviousLocation"]</span></td>
                            }
                            else
                            {
                                <td> - </td>
                            }

                        }

                        <td> @item["MovedOn"] </td>
                        <td> @item["MovedBy"] </td>
                    </tr>


                }
            }
            
        </tbody>
    </table>

</div>

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- DataTables CSS -->
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.5/css/jquery.dataTables.min.css">
<!-- DataTables JS -->
<script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>
<!-- DataTables Buttons CSS -->
<link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.3.6/css/buttons.dataTables.min.css">

<!-- DataTables Buttons JS -->
<script src="https://cdn.datatables.net/buttons/2.3.6/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.print.min.js"></script>

@* 
<!-- DataTables Buttons CSS -->
<link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.3.7/css/buttons.dataTables.min.css">


<!-- DataTables Buttons JS -->
<script src="https://cdn.datatables.net/buttons/2.3.7/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.3.7/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.3.7/js/buttons.print.min.js"></script> *@

<!-- JSZip and PDFMake (for Excel and PDF export) -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>

<script>

    $(document).ready(function () {

        $.getJSON('@Url.Action("GetContainerNos", "Home")', function (data) {
            $.each(data, function (index, value) {
                $('#containerNoDropdown').append('<option value="' + value + '">' + value + '</option>');
            });
        });
        // Initialize Select2 on the container number dropdown
        $('#containerNoDropdown').select2({
            // placeholder: "--Select ContainerNo--",
            allowClear: true,
            width: '100%' // Makes sure it takes up the full width
        });
    });




    console.log("Initializing DataTable...");

    // Initialize DataTable
    var table = $('#tblhistory').DataTable({
        dom: 'Bfrtip',
        buttons: ['copy', 'csv', 'excel', 'pdf', 'print'],  // Export buttons
        initComplete: function () {
            console.log("DataTable initialized with buttons.");
        }
    });

    // Check if buttons are loaded correctly
    if ($.fn.DataTable.isDataTable('#tblhistory')) {
        console.log("DataTable is initialized.");
        if (typeof table.buttons === 'function') {
            console.log("Buttons extension is loaded and working.");
        } else {
            console.error("Buttons extension is not loaded.");
        }
    } else {
        console.error("DataTable initialization failed.");
    }
</script>
